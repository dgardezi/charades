{"version":3,"sources":["resources/images/logo.svg","resources/icons/volumeFull.svg","resources/icons/volumeHalf.svg","resources/icons/mute.svg","resources/icons/send-button.svg","resources/sounds/playerJoin.mp3","resources/sounds/playerLeave.mp3","resources/sounds/correctGuess.mp3","resources/sounds/timerLow.mp3","resources/sounds/roundEnd.mp3","resources/sounds/roundStart.mp3","resources/images/error.svg","../node_modules/peerjs/dist sync","Socket.js","GameContext.js","components/Home.js","components/Player.js","components/Lobby.js","components/Chat/Message.js","components/Chat/Messages.js","components/Chat/InfoBar.js","components/Chat/ChatTextfield.js","components/Chat/ChatBox.js","components/OverlayComponents.js","components/Game.js","App.js","MobileLanding.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","socket","io","GameContext","React","createContext","Home","gameContext","useContext","handleNameChange","useCallback","event","setName","target","value","handleRoomChange","setRoom","trim","toUpperCase","className","src","Logo","type","placeholder","maxLength","onChange","onClick","name","room","emit","error","alert","href","Player","player","muted","isActor","overlayContents","useState","volume","volumeVal","setVolumeVal","prevVolumeVal","setPrevVolumeVal","userVideo","useRef","useEffect","current","srcObject","stream","handleVolumeChange","handleVolumePress","document","getElementById","ref","autoPlay","mute","halfVolume","fullVolume","min","max","step","Lobby","remotePlayers","players","map","key","userId","call","username","length","Message","message","user","text","Messages","messages","messagesEndRef","scrollIntoView","behavior","i","InfoBar","ChatTextfield","setMessage","sendMessage","onKeyPress","send_icon","ChatBox","setMessages","on","preventDefault","OverlayMessage","WordChoices","words","onWordChoice","buttons","word","Game","actor","setActor","setWord","setWordChoices","time","setTime","userPoints","setUserPoints","actorPlayer","setActorPlayer","guessedWord","setGuessedWord","setOverlayContents","guessedCorrectAudio","Audio","guessCorrectSound","userJoinAudio","userJoinSound","userLeaveAudio","userLeaveSound","timerLowAudio","timerLowSound","roundStartAudio","roundStartSound","roundEndAudio","roundEndSound","play","wordChoices","handleWordChoice","percentage","timer","mask","style","WebkitTransition","timerPos","Math","floor","abs","maskPos","backgroundColor","transform","updateTimerBorder","points","filter","p","find","render","result","slice","getWordHint","renderWord","PEER_OPTIONS","secure","host","port","path","App","addPlayer","setPlayers","prevplayers","connectToNewUser","myPeer","metadata","count","userVideoStream","setMyPeer","Peer","err","console","log","response","status","setState","dcUser","close","prevPlayers","setupConnections","a","peer","answer","state","navigator","mediaDevices","getUserMedia","video","audio","then","MobileLanding","ErrorIcon","ReactDOM","children","gameData","Provider"],"mappings":"4HAAAA,EAAOC,QAAU,IAA0B,kC,gDCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,oDCA3C,SAASC,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BF,EAAOC,QAAUC,EACjBA,EAAoBO,GAAK,I,uZCNZC,E,MAASC,GADE,mC,eCCXC,EAAcC,IAAMC,gBCIjC,IA0GeC,EA1GF,WACX,IAAMC,EAAcC,qBAAWL,GAEzBM,EAAmBC,sBAAY,SAACC,GACpCJ,EAAYK,QAAQD,EAAME,OAAOC,QAChC,IAEGC,EAAmBL,sBAAY,SAACC,GACpCJ,EAAYS,QAAQL,EAAME,OAAOC,MAAMG,OAAOC,gBAC7C,IA0BH,OACE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,QACb,yBAAKC,IAAKC,IAAMF,UAAU,eAC1B,uBAAGA,UAAU,gBAAb,2CAEE,6BAFF,qBAOJ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,SAAd,YACA,2BACEA,UAAU,cACVG,KAAK,OACLC,YAAY,WACZC,UAAU,KACVC,SAAUhB,IAEZ,2BACEU,UAAU,cACVG,KAAK,OACLC,YAAY,YACZC,UAAU,IACVC,SAAUV,IAEZ,yBAAKI,UAAU,iBACb,4BAAQA,UAAU,cAAcO,QAtDzB,WACXnB,EAAYoB,MAAQpB,EAAYqB,MAClC3B,EAAO4B,KACL,gBACA,CAAEF,KAAMpB,EAAYoB,KAAMC,KAAMrB,EAAYqB,MAC5C,SAACE,GACKA,GACFC,MAAMD,OA+CN,aAGA,4BAAQX,UAAU,gBAAgBO,QA3CzB,WACbnB,EAAYoB,MACd1B,EAAO4B,KAAK,kBAAmB,CAAEF,KAAMpB,EAAYoB,MAAQ,SAACG,GACtDA,GACFC,MAAMD,OAuCJ,mBAKJ,yBAAKX,UAAU,UACb,uBAAGA,UAAU,mBAAb,aACa,IACX,uBACEa,KAAK,yCACLnB,OAAO,SACPM,UAAU,gBAHZ,iBAFF,IASI,IACF,uBACEa,KAAK,4CACLnB,OAAO,SACPM,UAAU,gBAHZ,iBAVF,IAiBI,IACF,uBACEa,KAAK,yDACLnB,OAAO,SACPM,UAAU,gBAHZ,wB,2DCDGc,EA1FA,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAAsB,EAC5BC,mBAASJ,EAAOK,QADY,mBACvDC,EADuD,KAC5CC,EAD4C,OAEpBH,mBAAS,IAFW,mBAEvDI,EAFuD,KAExCC,EAFwC,KAGxDC,EAAYC,mBAElBC,oBAAU,WACJF,EAAUG,UACZH,EAAUG,QAAQC,UAAYd,EAAOe,SAEtC,CAACf,EAAOe,SAEXH,oBAAU,WACJF,EAAUG,UACZH,EAAUG,QAAQR,OAASC,IAE5B,CAACA,IAEJ,IAAMU,EAAqBxC,sBAAY,SAACC,GACtC8B,EAAa9B,EAAME,OAAOC,OAC1BoB,EAAOK,OAAS5B,EAAME,OAAOC,OAC5B,IAEGqC,EAAoBzC,sBACxB,SAACC,GACmB,IAAd6B,GACFG,EAAiBH,GACjBC,EAAa,GACbP,EAAOK,OAAS,EAChBa,SAASC,eAAe,cAAcvC,MAAQ,IAE9C2B,EAAaC,GACbR,EAAOK,OAASG,EAChBU,SAASC,eAAe,cAAcvC,MAAQ4B,IAGlD,CAACF,IAaH,OACE,yBAAKrB,UAAU,mBACb,yBAAKA,UAAU,aACZiB,GAAWC,EACV,yBAAKlB,UAAU,iBAAiBkB,GAEhC,GAEF,2BACEiB,IAAKV,EACLW,UAAU,EACVpB,MAAOA,EACPhB,UAAU,gBAEVgB,EAmBA,GAlBA,yBAAKhB,UAAU,kBACb,yBACEA,UAAU,eACVC,IA3BQ,IAAdoB,EACKgB,IACEhB,EAAY,GACdiB,IAEAC,IAuBChC,QAASyB,IAEX,2BACEhC,UAAU,SACVnB,GAAG,aACHsB,KAAK,QACLqC,IAAI,IACJC,IAAI,IACJ9C,MAAO0B,EACPqB,KAAK,OACLpC,SAAUyB,MAOjBd,EAAU,yBAAKjB,UAAU,QAAQnB,GAAG,UAAa,GACjDoC,EAAU,yBAAKjB,UAAU,OAAOnB,GAAG,SAAY,KCtCvC8D,G,MA/CD,WACZ,IAAMvD,EAAcC,qBAAWL,GAEzB4D,EAAgBxD,EAAYyD,QAAQC,IAAI,SAAC/B,GAAD,OAC5C,yBAAKgC,IAAKhC,EAAOiC,OAAQhD,UAAU,UACjC,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAQe,OAAQA,EAAQC,MAAsB,MAAfD,EAAOkC,QAExC,uBAAGjD,UAAU,eAAee,EAAOmC,aAYvC,OACE,yBAAKlD,UAAU,mBACb,yBAAKA,UAAU,UACb,uBAAGa,KAAK,KACN,yBACEZ,IAAKC,IACLF,UAAU,iBAGd,wBAAIA,UAAU,mBAAmBZ,EAAYqB,MAC7C,yBAAKT,UAAU,WAEjB,yBAAKA,UAAU,eAAe4C,GAC9B,yBAAK5C,UAAU,sBACb,uBAAGA,UAAU,gBAAgBZ,EAAYyD,QAAQM,OAAjD,gBACC/D,EAAYyD,QAAQM,QAAU,EAC7B,4BAAQnD,UAAU,eAAeO,QAxBvB,WAChBzB,EAAO4B,KAAK,iBAAkB,CAAED,KAAMrB,EAAYqB,MAAQ,SAACE,GACrDA,GACFC,MAAMD,OAqBJ,cAIA,4BAAQX,UAAU,yBAAlB,0BCVKoD,G,MAlCC,SAAC,GAAuC,IAAD,IAApCC,QAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KAAQ/C,EAAW,EAAXA,KA+B1C,OA5BI8C,IAAS9C,EAET,yBAAKR,UAAU,+BACb,uBAAGA,UAAU,kBAAkBQ,GAC/B,yBAAKR,UAAU,6BACb,uBAAGA,UAAU,eAAeuD,KAIhB,KAATD,EAEP,yBAAKtD,UAAU,iCACb,yBAAKA,UAAU,6BACb,uBAAGA,UAAU,yBAAyBuD,KAM1C,yBAAKvD,UAAU,iCACb,yBAAKA,UAAU,6BACb,uBAAGA,UAAU,yBAAyBuD,IAExC,uBAAGvD,UAAU,mBAAmBsD,MCDzBE,G,MAxBE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUjD,EAAW,EAAXA,KACtBkD,EAAiBhC,iBAAO,MAW9B,OAJAC,oBAAU,WAJR+B,EAAe9B,SACX8B,EAAe9B,QAAQ+B,eAAe,CAAEC,SAAU,YAKrD,CAACH,IAGF,yBAAKzD,UAAU,YACZyD,EAASX,IAAI,SAACO,EAASQ,GAAV,OACZ,yBAAKd,IAAKc,GACR,kBAAC,EAAD,CAASR,QAASA,EAAS7C,KAAMA,OAGrC,yBAAK2B,IAAKuB,OCdDI,G,MANC,SAAC,GAAD,IAAGrD,EAAH,EAAGA,KAAH,OACd,yBAAKT,UAAU,WACb,wBAAIA,UAAU,oBAAoBS,M,iBCevBsD,G,MAhBO,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,YAAaZ,EAA5B,EAA4BA,QAA5B,OACpB,0BAAMrD,UAAU,cACd,2BACEA,UAAU,aACVG,KAAK,OACLC,YAAY,qBACZT,MAAO0D,EACP/C,SAAU,gBAAaX,EAAb,EAAGD,OAAUC,MAAb,OAA2BqE,EAAWrE,IAChDuE,WAAY,SAAC1F,GAAD,MACA,UAAVA,EAAEuE,IAAkBkB,EAAYzF,GAAK,QAGzC,yBAAKyB,IAAKkE,IAAWnE,UAAU,cAAcO,QAAS,SAAC/B,GAAD,OAAOyF,EAAYzF,SCwB9D4F,G,MAhCC,SAAC,GAAoB,IAAlB3D,EAAiB,EAAjBA,KAAMD,EAAW,EAAXA,KAAW,EACJW,mBAAS,IADL,mBAC3BkC,EAD2B,KAClBW,EADkB,OAEF7C,mBAAS,IAFP,mBAE3BsC,EAF2B,KAEjBY,EAFiB,KAIlC1C,oBAAU,WACR7C,EAAOwF,GAAG,UAAW,SAACjB,GACpBgB,EAAY,SAACZ,GAAD,4BAAkBA,GAAlB,CAA4BJ,SAEzC,IAWH,OACE,yBAAKrD,UAAU,WACb,kBAAC,EAAD,CAASS,KAAMA,IACf,kBAAC,EAAD,CAAUgD,SAAUA,EAAUjD,KAAMA,IACpC,kBAAC,EAAD,CACE6C,QAASA,EACTW,WAAYA,EACZC,YAhBc,SAACzE,GACnBA,EAAM+E,iBAEFlB,IACFvE,EAAO4B,KAAK,cAAe,CAAE2C,QAASA,IACtCW,EAAW,WCpBJQ,G,YAAiB,SAAC,GAAiB,IAAfnB,EAAc,EAAdA,QAC/B,OAAO,uBAAGrD,UAAU,mBAAmBqD,KAG5BoB,EAAc,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAC7BC,EAAUF,EAAM5B,IAAI,SAAC+B,GAAD,OACxB,4BACE9B,IAAK8B,EACL7E,UAAU,qBACVO,QAAS,kBAAMoE,EAAaE,KAE5B,+BAAKA,EAAL,QAIJ,OAAO,yBAAK7E,UAAU,uBAAuB4E,I,sGCkNhCE,EA5MF,WACX,IAAM1F,EAAcC,qBAAWL,GADd,EAGSmC,mBAAS/B,EAAYoB,MAH9B,mBAGVuE,EAHU,KAGHC,EAHG,OAIO7D,mBAAS,IAJhB,mBAIV0D,EAJU,KAIJI,EAJI,OAKqB9D,mBAAS,IAL9B,mBAKG+D,GALH,aAMO/D,mBAAS,IANhB,mBAMVgE,EANU,KAMJC,EANI,OAOmBjE,mBAAS,MAP5B,mBAOVkE,EAPU,KAOEC,EAPF,OAQqBnE,mBAAS,MAR9B,mBAQVoE,EARU,KAQGC,EARH,OASqBrE,oBAAS,GAT9B,mBASVsE,EATU,KASGC,EATH,OAU6BvE,mBAC5C,kBAAC,EAAD,CAAgBkC,QAAO,+BAXR,mBAUVnC,EAVU,KAUOyE,EAVP,KAcjBhE,oBAAU,WACR,IAAIiE,EAAsB,IAAIC,MAAMC,KACpCF,EAAoBxE,OAAS,GAC7B,IAAI2E,EAAgB,IAAIF,MAAMG,KAC9BD,EAAc3E,OAAS,GACvB,IAAI6E,EAAiB,IAAIJ,MAAMK,KAC/BD,EAAe7E,OAAS,GACxB,IAAI+E,EAAgB,IAAIN,MAAMO,KAC9BD,EAAc/E,OAAS,GACvB,IAAIiF,EAAkB,IAAIR,MAAMS,KAChCD,EAAgBjF,OAAS,GACzB,IAAImF,EAAgB,IAAIV,MAAMW,KAC9BD,EAAcnF,OAAS,GA2BvBtC,EAAOwF,GAAG,gBAAiB,SAACtB,EAAQE,GAClC6C,EAAcU,SAGhB3H,EAAOwF,GAAG,mBAAoB,SAACtB,EAAQE,GACrC+C,EAAeQ,SAGjB3H,EAAOwF,GAAG,QAAS,YAAgB,IAAbS,EAAY,EAAZA,MACpBC,EAASD,GACTE,EAAQ,IACRS,GAAe,GACfC,EACE,kBAAC,EAAD,CAAgBtC,QAAO,UAAK0B,EAAL,4BAI3BjG,EAAOwF,GAAG,OAAQ,YAAe,IAAZO,EAAW,EAAXA,KACnBwB,EAAgBI,OAChBxB,EAAQJ,GACRa,GAAe,GACfC,EAAmB,QAGrB7G,EAAOwF,GAAG,cAAe,SAACoC,GACxBxB,EAAewB,GACff,EACE,kBAAC,EAAD,CAAajB,MAAOgC,EAAa/B,aAAcgC,OAInD7H,EAAOwF,GAAG,QAAS,YAAe,IAAZa,EAAW,EAAXA,KACpBC,EAAQD,GACJA,GAAQ,GA1DY,SAACyB,GACzB,IAAIC,EAAQ5E,SAASC,eAAe,SAChC4E,EAAO7E,SAASC,eAAe,QAEnC,GAAI2E,GAASC,EAAM,CAEfD,EAAME,MAAMC,iBADK,IAAfJ,EAC6B,gBAEA,gBAGjC,IAAIK,IAAa,IAAMC,KAAKC,MAAM,IAAMP,IACxC,GAAIM,KAAKE,IAAIH,GAAY,IAAK,CAC5B,IAAII,EAAU,IACdP,EAAKC,MAAMO,gBAAkB,wBACxB,CACDD,EAAU,EACdP,EAAKC,MAAMO,gBAAkB,qBAG/BT,EAAME,MAAMQ,UAAY,UAAYN,EAAW,OAC/CH,EAAKC,MAAMQ,UAAY,UAAYF,EAAU,QAsC7CG,CAAkBrC,EAAO,IAEvBA,GAAQ,GAAKA,GAAQ,EACvBgB,EAAcM,QACK,IAAVtB,GACToB,EAAcE,SAIlB3H,EAAOwF,GAAG,UAAW,SAACpB,GACpB0C,EAAoBa,OAChBvD,IAAa9D,EAAYoB,MAC3BkF,GAAe,KAInB5G,EAAOwF,GAAG,SAAU,SAACmD,GACnBnC,EAAcmC,MAEf,IAEH,IAAM7E,EAAgBxD,EAAYyD,QAC/B6E,OAAO,SAACC,GAAD,OAAOA,EAAEzE,WAAa6B,IAC7BjC,IAAI,SAAC/B,GAAD,OACH,yBAAKgC,IAAKhC,EAAOiC,OAAQhD,UAAU,WACjC,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CAAQe,OAAQA,EAAQC,MAAsB,MAAfD,EAAOkC,QAExC,uBAAGjD,UAAU,gBAAgBe,EAAOmC,UACpC,uBAAGlD,UAAU,eACK,OAAfqF,EAAsBA,EAAWtE,EAAOmC,UAAY,EADvD,WAeNvB,oBAAU,WACJoD,IAAU3F,EAAYoB,KACxBgF,EACEpG,EAAYyD,QAAQ+E,KAClB,SAAC7G,GAAD,OAAYA,EAAOmC,WAAa9D,EAAYoB,QAG7B,KAAVuE,GACTS,EACEpG,EAAYyD,QAAQ+E,KAAK,SAAC7G,GAAD,OAAYA,EAAOmC,WAAa6B,MAG5D,CAACA,EAAO3F,EAAYyD,UAEvB,IAAM8D,EAAmB,SAAC9B,GACxB/F,EAAO4B,KAAK,aAAcmE,IAsB5B,OACE,yBAAK7E,UAAU,kBACb,yBAAKA,UAAU,UACb,uBAAGa,KAAK,KACN,yBAAKZ,IAAKC,IAAMF,UAAU,iBAE5B,yBAAKA,UAAU,QAzBF,WACjB,IAAI6H,EAeJ,OAbIzI,EAAYyD,QAAQM,QAAU,EAE9B0E,EADE9C,IAAU3F,EAAYoB,OAAkB,IAAV2E,GAAeM,EACtC,4BAAKZ,GAEL,4BAlCK,SAACA,GACnB,IACIhB,EADAiE,EAAS,GAEb,IAAKjE,EAAI,EAAGA,EAAIgB,EAAK1B,OAAQU,IAC3BiE,GAAsB,MAAZjD,EAAKhB,GAAa,WAAa,QAE3C,OAAOiE,EAAOC,MAAM,GAAI,GA4BNC,CAAYnD,KAGf,KAATA,GACFI,EAAQ,IAEV4C,EAAS,oDAGJA,EASoBI,IACvB,yBAAKjI,UAAU,WAEjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,SACZuF,EACC,yBAAKvF,UAAU,gBACb,kBAAC,EAAD,CACEe,OAAQwE,EACRvE,OAAO,EACPC,SAAS,EACTC,gBAAiBA,KAIrB,GAEF,uBAAGlB,UAAU,gBACVuF,EAAcA,EAAYrC,SAAW,KAG1C,yBAAKlD,UAAU,0BAA0B4C,IAE3C,kBAAC,EAAD,CAASnC,KAAMrB,EAAYqB,KAAMD,KAAMpB,EAAYoB,UCrNrD0H,EAAe,CACnBC,QAAQ,EACRC,KAAM,0BACNC,KAAM,MACNC,KAAM,SAwIOC,EArIH,WACV,IAAMnJ,EAAcC,qBAAWL,GAEzBwJ,EAAY,SAACxF,EAAQE,EAAUpB,EAAQmB,GAC3C7D,EAAYqJ,WAAW,SAACC,GAAD,4BAClBA,GADkB,CAErB,CACE1F,OAAQA,EACRE,SAAUA,EACVpB,OAAQA,EACRmB,KAAMA,EACN7B,OAAQ,SAKRuH,EAAmB,SAAC3F,EAAQE,EAAUpB,GAC1C,IAAMmB,EAAO7D,EAAYwJ,OAAO3F,KAAKD,EAAQlB,EAAQ,CACnD+G,SAAU,CAAE3F,SAAU9D,EAAYoB,QAEhCsI,EAAQ,EACZ7F,EAAKqB,GAAG,SAAU,SAACyE,GACbD,IAAU,IAAM,GAClBN,EAAUxF,EAAQE,EAAU6F,EAAiB9F,MA2GnD,OAtGAtB,oBAAU,WAEJ7C,EAAOD,IACTO,EAAY4J,UAAU,IAAIC,IAAKnK,EAAOD,GAAIqJ,KAE3C,CAACpJ,IAEJ6C,oBAAU,WACJvC,EAAYwJ,QACdxJ,EAAYwJ,OAAOtE,GAAG,QAAS,SAAC4E,GAC9BC,QAAQC,IAAIF,EAAI/I,KAAM+I,MAGzB,CAAC9J,EAAYwJ,SAEhBjH,oBAAU,WACR7C,EAAOwF,GAAG,mBAAoB,YAAyB,IAAtB+E,EAAqB,EAArBA,SAAU5I,EAAW,EAAXA,KACjC6I,EAAoBD,EAApBC,OAAQjG,EAAYgG,EAAZhG,QACD,IAAXiG,GACFlK,EAAYS,QAAQY,GACpBrB,EAAYmK,SAAS,UAErB3I,MAAMyC,KAIVvE,EAAOwF,GAAG,oBAAqB,YAAmB,IAAhB+E,EAAe,EAAfA,SACxBC,EAAoBD,EAApBC,OAAQjG,EAAYgG,EAAZhG,QACD,IAAXiG,EACFlK,EAAYmK,SAAS,QAErB3I,MAAMyC,KAIVvE,EAAOwF,GAAG,mBAAoB,YAAiB,IAAdtB,EAAa,EAAbA,OAE3BwG,EAASpK,EAAYyD,QAAQ+E,KAC/B,SAAC7G,GAAD,OAAYA,EAAOiC,SAAWA,IAE5BwG,GACFA,EAAOvG,KAAKwG,QAIdrK,EAAYqJ,WAAW,SAACiB,GAAD,OACrBA,EAAYhC,OAAO,SAACC,GAAD,OAAOA,EAAE3E,SAAWA,SAG1C,IAEHrB,oBAAU,WACR,IAAMgI,EAAgB,sCAAG,WAAO7H,GAAP,SAAA8H,EAAA,qEAEjBxK,EAAYwJ,OAAOtE,GAAG,OAAQ,SAACrB,GACnC,IAAMD,EAASC,EAAK4G,KACd3G,EAAWD,EAAK4F,SAAS3F,SAE/BD,EAAK6G,OAAOhI,GAGZ,IAAIgH,EAAQ,EACZ7F,EAAKqB,GAAG,SAAU,SAACyE,GACbD,IAAU,IAAM,GAClBN,EAAUxF,EAAQE,EAAU6F,EAAiB9F,OAZ5B,OAkBvBnE,EAAOwF,GAAG,gBAAiB,SAACtB,EAAQE,GAClCyF,EAAiB3F,EAAQE,EAAUpB,KAnBd,yCAAH,sDAuBI,UAAtB1C,EAAY2K,OACdC,UAAUC,aACPC,aAAa,CACZC,OAAO,EACPC,OAAO,IAERC,KAAK,SAACvI,GAEL0G,EAAU1J,EAAOD,GAAIO,EAAYoB,KAAMsB,EAAQ,MAG/C6H,EAAiB7H,GAAQuI,KAAK,WAC5BvL,EAAO4B,KAAK,gBAAiBtB,EAAYqB,WAIhD,CAACrB,EAAY2K,QAGU,SAAtB3K,EAAY2K,MACL,kBAAC,EAAD,MACsB,UAAtB3K,EAAY2K,MACZ,kBAAC,EAAD,MAEA,kBAAC,EAAD,O,yBCjIEO,GATO,WACpB,OACE,yBAAKtK,UAAU,4BACb,yBAAKA,UAAU,aAAaC,IAAKsK,MACjC,uBAAGvK,UAAU,WAAb,+C,iBCDNwK,IAAS3C,OACP,kBbLK,YAAqC,IAAb4C,EAAY,EAAZA,SAAY,EAEjBtJ,mBAAS,IAFQ,mBAElCX,EAFkC,KAE5Bf,EAF4B,OAGjB0B,mBAAS,IAHQ,mBAGlCV,EAHkC,KAG5BZ,EAH4B,OAIXsB,mBAAS,IAJE,mBAIlC0B,EAJkC,KAIzB4F,EAJyB,OAKftH,mBAAS,QALM,mBAKlC4I,EALkC,KAK3BR,EAL2B,OAMbpI,mBAAS,MANI,mBAQnCuJ,EAAW,CACflK,OACAC,OACAhB,UACAI,UACAgD,UACA4F,aACAsB,QACAR,WACAX,OAjBuC,KAkBvCI,UAlBuC,MAqBzC,OACE,kBAAChK,EAAY2L,SAAb,CAAsBhL,MAAO+K,GAAWD,IajB1C,KACE,kBAAC,eAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,cAAD,KACE,kBAAC,GAAD,QAGJxI,SAASC,eAAe,W","file":"static/js/main.ae339bf1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d642444b.svg\";","module.exports = __webpack_public_path__ + \"static/media/volumeFull.52052744.svg\";","module.exports = __webpack_public_path__ + \"static/media/volumeHalf.5437f749.svg\";","module.exports = __webpack_public_path__ + \"static/media/mute.7c949b53.svg\";","module.exports = __webpack_public_path__ + \"static/media/send-button.184677f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/playerJoin.22614250.mp3\";","module.exports = __webpack_public_path__ + \"static/media/playerLeave.2ed3dd57.mp3\";","module.exports = __webpack_public_path__ + \"static/media/correctGuess.abbd5947.mp3\";","module.exports = __webpack_public_path__ + \"static/media/timerLow.7a00b8ca.mp3\";","module.exports = __webpack_public_path__ + \"static/media/roundEnd.d9a7eee5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/roundStart.e6e97ef3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/error.25e3f2c4.svg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 53;","import io from \"socket.io-client\";\r\nexport const endpoint = \"https://charades1.herokuapp.com\";\r\nexport const socket = io(endpoint);\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nexport const GameContext = React.createContext();\r\n\r\nexport function GameProvider({ children }) {\r\n  //STATE GOES HERE\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [players, setPlayers] = useState([]); // player = {userId, username, stream, call, volume}\r\n  const [state, setState] = useState(\"home\");\r\n  const [myPeer, setMyPeer] = useState(null);\r\n\r\n  const gameData = {\r\n    name,\r\n    room,\r\n    setName,\r\n    setRoom,\r\n    players,\r\n    setPlayers,\r\n    state,\r\n    setState,\r\n    myPeer,\r\n    setMyPeer,\r\n  };\r\n\r\n  return (\r\n    <GameContext.Provider value={gameData}>{children}</GameContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useCallback } from \"react\";\nimport Logo from \"../resources/images/logo.svg\";\nimport { socket } from \"../Socket\";\nimport \"./Home.css\";\nimport { GameContext } from \"../GameContext\";\n\nconst Home = () => {\n  const gameContext = useContext(GameContext);\n\n  const handleNameChange = useCallback((event) => {\n    gameContext.setName(event.target.value);\n  }, []);\n\n  const handleRoomChange = useCallback((event) => {\n    gameContext.setRoom(event.target.value.trim().toUpperCase());\n  }, []);\n\n  const joinRoom = () => {\n    if (gameContext.name && gameContext.room) {\n      socket.emit(\n        \"joinRoomQuery\",\n        { name: gameContext.name, room: gameContext.room },\n        (error) => {\n          if (error) {\n            alert(error);\n          }\n        }\n      );\n    }\n  };\n\n  const createRoom = () => {\n    if (gameContext.name) {\n      socket.emit(\"createRoomQuery\", { name: gameContext.name }, (error) => {\n        if (error) {\n          alert(error);\n        }\n      });\n    }\n  };\n\n  return (\n    <div className=\"home-container\">\n      <div className=\"logo-section\">\n        <div className=\"logo\">\n          <img src={Logo} className=\"logo-image\" />\n          <p className=\"logo-subtext\">\n            face to face fun with the ones you love,\n            <br />\n            minus the risk.\n          </p>\n        </div>\n      </div>\n      <div className=\"login-section\">\n        <div className=\"login-form\">\n          <h1 className=\"title\">charades</h1>\n          <input\n            className=\"login-input\"\n            type=\"text\"\n            placeholder=\"nickname\"\n            maxLength=\"15\"\n            onChange={handleNameChange}\n          />\n          <input\n            className=\"login-input\"\n            type=\"text\"\n            placeholder=\"game code\"\n            maxLength=\"4\"\n            onChange={handleRoomChange}\n          />\n          <div className=\"login-buttons\">\n            <button className=\"join-button\" onClick={joinRoom}>\n              join game\n            </button>\n            <button className=\"create-button\" onClick={createRoom}>\n              create a game\n            </button>\n          </div>\n        </div>\n        <div className=\"footer\">\n          <p className=\"footer-creators\">\n            created by{\" \"}\n            <a\n              href=\"https://www.linkedin.com/in/dmercer10/\"\n              target=\"_blank\"\n              className=\"creator-name\"\n            >\n              duncan mercer\n            </a>\n            ,{\" \"}\n            <a\n              href=\"https://www.linkedin.com/in/durongardezi/\"\n              target=\"_blank\"\n              className=\"creator-name\"\n            >\n              duron gardezi\n            </a>\n            ,{\" \"}\n            <a\n              href=\"https://www.linkedin.com/in/griffin-bentley-72b391199/\"\n              target=\"_blank\"\n              className=\"creator-name\"\n            >\n              griffin bentley\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useRef, useCallback, useState } from \"react\";\r\nimport \"./Player.css\";\r\n\r\nimport fullVolume from \"../resources/icons/volumeFull.svg\";\r\nimport halfVolume from \"../resources/icons/volumeHalf.svg\";\r\nimport mute from \"../resources/icons/mute.svg\";\r\n\r\nconst Player = ({ player, muted, isActor, overlayContents }) => {\r\n  const [volumeVal, setVolumeVal] = useState(player.volume);\r\n  const [prevVolumeVal, setPrevVolumeVal] = useState(0.5);\r\n  const userVideo = useRef();\r\n\r\n  useEffect(() => {\r\n    if (userVideo.current) {\r\n      userVideo.current.srcObject = player.stream;\r\n    }\r\n  }, [player.stream]);\r\n\r\n  useEffect(() => {\r\n    if (userVideo.current) {\r\n      userVideo.current.volume = volumeVal;\r\n    }\r\n  }, [volumeVal]);\r\n\r\n  const handleVolumeChange = useCallback((event) => {\r\n    setVolumeVal(event.target.value);\r\n    player.volume = event.target.value;\r\n  }, []);\r\n\r\n  const handleVolumePress = useCallback(\r\n    (event) => {\r\n      if (volumeVal !== 0) {\r\n        setPrevVolumeVal(volumeVal);\r\n        setVolumeVal(0);\r\n        player.volume = 0;\r\n        document.getElementById(\"volControl\").value = 0;\r\n      } else {\r\n        setVolumeVal(prevVolumeVal);\r\n        player.volume = prevVolumeVal;\r\n        document.getElementById(\"volControl\").value = prevVolumeVal;\r\n      }\r\n    },\r\n    [volumeVal]\r\n  );\r\n\r\n  const getVolumeIcon = () => {\r\n    if (volumeVal === 0) {\r\n      return mute;\r\n    } else if (volumeVal < 0.5) {\r\n      return halfVolume;\r\n    } else {\r\n      return fullVolume;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"playerContainer\">\r\n      <div className=\"videoArea\">\r\n        {isActor && overlayContents ? (\r\n          <div className=\"actor-overlay\">{overlayContents}</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <video\r\n          ref={userVideo}\r\n          autoPlay={true}\r\n          muted={muted}\r\n          className=\"playerVideo\"\r\n        ></video>\r\n        {!muted ? (\r\n          <div className=\"volumeControls\">\r\n            <img\r\n              className=\"volumeButton\"\r\n              src={getVolumeIcon()}\r\n              onClick={handleVolumePress}\r\n            />\r\n            <input\r\n              className=\"slider\"\r\n              id=\"volControl\"\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"1\"\r\n              value={volumeVal}\r\n              step=\"0.01\"\r\n              onChange={handleVolumeChange}\r\n            ></input>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      {isActor ? <div className=\"timer\" id=\"timer\" /> : \"\"}\r\n      {isActor ? <div className=\"mask\" id=\"mask\" /> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useContext } from \"react\";\nimport Player from \"./Player\";\nimport Logo from \"../resources/images/logo.svg\";\nimport { socket } from \"../Socket\";\nimport \"./Lobby.css\";\nimport { GameContext } from \"../GameContext\";\n\nconst Lobby = () => {\n  const gameContext = useContext(GameContext);\n\n  const remotePlayers = gameContext.players.map((player) => (\n    <div key={player.userId} className=\"player\">\n      <div className=\"player-camera\">\n        <Player player={player} muted={player.call == null} />\n      </div>\n      <p className=\"player-name\">{player.username}</p>\n    </div>\n  ));\n\n  const startGame = () => {\n    socket.emit(\"startGameQuery\", { room: gameContext.room }, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n  };\n\n  return (\n    <div className=\"lobby-container\">\n      <div className=\"header\">\n        <a href=\"/\">\n          <img\n            src={Logo}\n            className=\"header-logo\"\n          />\n        </a>\n        <h1 className=\"header-gamecode\">{gameContext.room}</h1>\n        <div className=\"dummy\" />\n      </div>\n      <div className=\"player-grid\">{remotePlayers}</div>\n      <div className=\"start-game-section\">\n        <p className=\"player-count\">{gameContext.players.length} / 6 players</p>\n        {gameContext.players.length >= 1 ? (\n          <button className=\"start-button\" onClick={startGame}>\n            start game\n          </button>\n        ) : (\n          <button className=\"start-button-disabled\">not enough players</button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Lobby;\n","import React from \"react\";\nimport \"./Message.css\";\n\nconst Message = ({ message: { user, text }, name }) => {\n  let render;\n\n  if (user === name) {\n    render = (\n      <div className=\"messageContainer justifyEnd\">\n        <p className=\"sentText pr-10\">{name}</p>\n        <div className=\"messageBox backgroundPink\">\n          <p className=\"messageText\">{text}</p>\n        </div>\n      </div>\n    );\n  } else if (user === \"\") {\n    render = (\n      <div className=\"messageContainer justifyStart\">\n        <div className=\"messageBox backgroundAqua\">\n          <p className=\"messageText textBlack\">{text}</p>\n        </div>\n      </div>\n    );\n  } else {\n    render = (\n      <div className=\"messageContainer justifyStart\">\n        <div className=\"messageBox backgroundGray\">\n          <p className=\"messageText textBlack\">{text}</p>\n        </div>\n        <p className=\"sentText pl-10 \">{user}</p>\n      </div>\n    );\n  }\n\n  return render;\n};\n\nexport default Message;\n","import React, { useEffect, useRef } from \"react\";\nimport Message from \"./Message\";\nimport \"./Messages.css\";\n\nconst Messages = ({ messages, name }) => {\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () =>\n    messagesEndRef.current\n      ? messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })\n      : null;\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  return (\n    <div className=\"messages\">\n      {messages.map((message, i) => (\n        <div key={i}>\n          <Message message={message} name={name} />\n        </div>\n      ))}\n      <div ref={messagesEndRef} />\n    </div>\n  );\n};\n\nexport default Messages;\n","import React from 'react';\r\nimport './InfoBar.css';\r\n\r\nconst InfoBar = ({ room }) => (\r\n  <div className=\"infobar\">\r\n    <h3 className=\"infobar-roomcode\">{room}</h3>\r\n  </div>\r\n);\r\n\r\nexport default InfoBar;\r\n","import React from \"react\";\r\nimport send_icon from \"../../resources/icons/send-button.svg\";\r\nimport \"./ChatTextfield.css\";\r\n\r\nconst ChatTextfield = ({ setMessage, sendMessage, message }) => (\r\n  <form className=\"chat-input\">\r\n    <input\r\n      className=\"text-input\"\r\n      type=\"text\"\r\n      placeholder=\"make a guess . . .\"\r\n      value={message}\r\n      onChange={({ target: { value } }) => setMessage(value)}\r\n      onKeyPress={(e) =>\r\n        e.key === \"Enter\" ? sendMessage(e) : null\r\n      }\r\n    />\r\n    <img src={send_icon} className=\"send-button\" onClick={(e) => sendMessage(e)} />\r\n  </form>\r\n);\r\n\r\nexport default ChatTextfield;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Messages from \"./Messages\";\r\nimport InfoBar from \"./InfoBar\";\r\nimport ChatTextfield from \"./ChatTextfield\";\r\nimport { socket } from \"../../Socket\";\r\nimport \"./ChatBox.css\";\r\n\r\nconst ChatBox = ({ room, name }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      setMessages((messages) => [...messages, message]);\r\n    });\r\n  }, []);\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", { message: message });\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbox\">\r\n      <InfoBar room={room} />\r\n      <Messages messages={messages} name={name} />\r\n      <ChatTextfield\r\n        message={message}\r\n        setMessage={setMessage}\r\n        sendMessage={sendMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React from \"react\";\r\nimport \"./OverlayComponents.css\";\r\n\r\nexport const OverlayMessage = ({ message }) => {\r\n  return <p className=\"overlay-message\">{message}</p>;\r\n};\r\n\r\nexport const WordChoices = ({ words, onWordChoice }) => {\r\n  const buttons = words.map((word) => (\r\n    <button\r\n      key={word}\r\n      className=\"word-choice-button\"\r\n      onClick={() => onWordChoice(word)}\r\n    >\r\n      <p> {word} </p>\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"word-choice-buttons\">{buttons}</div>;\r\n};\r\n","import React, { useEffect, useState, useContext, useCallback } from \"react\";\nimport { socket } from \"../Socket\";\nimport Player from \"./Player\";\nimport Logo from \"../resources/images/logo.svg\";\nimport ChatBox from \"./Chat/ChatBox\";\nimport \"./Game.css\";\nimport { GameContext } from \"../GameContext\";\nimport { WordChoices, OverlayMessage } from \"./OverlayComponents\";\n\n// Sound Effects\n// -------------------\n// User Join\nimport userJoinSound from \"../resources/sounds/playerJoin.mp3\";\n// User leave\nimport userLeaveSound from \"../resources/sounds/playerLeave.mp3\";\n// User guesses word correct\nimport guessCorrectSound from \"../resources/sounds/correctGuess.mp3\";\n// Timer getting low\nimport timerLowSound from \"../resources/sounds/timerLow.mp3\";\n// Round end\nimport roundEndSound from \"../resources/sounds/roundEnd.mp3\";\n// Round start\nimport roundStartSound from \"../resources/sounds/roundStart.mp3\";\n\nconst Game = () => {\n  const gameContext = useContext(GameContext);\n\n  const [actor, setActor] = useState(gameContext.name);\n  const [word, setWord] = useState(\"\");\n  const [wordChoices, setWordChoices] = useState([]);\n  const [time, setTime] = useState(60);\n  const [userPoints, setUserPoints] = useState(null);\n  const [actorPlayer, setActorPlayer] = useState(null);\n  const [guessedWord, setGuessedWord] = useState(false);\n  const [overlayContents, setOverlayContents] = useState(\n    <OverlayMessage message={`waiting for game to start`} />\n  );\n\n  useEffect(() => {\n    var guessedCorrectAudio = new Audio(guessCorrectSound);\n    guessedCorrectAudio.volume = 0.2;\n    var userJoinAudio = new Audio(userJoinSound);\n    userJoinAudio.volume = 0.2;\n    var userLeaveAudio = new Audio(userLeaveSound);\n    userLeaveAudio.volume = 0.2;\n    var timerLowAudio = new Audio(timerLowSound);\n    timerLowAudio.volume = 0.2;\n    var roundStartAudio = new Audio(roundStartSound);\n    roundStartAudio.volume = 0.2;\n    var roundEndAudio = new Audio(roundEndSound);\n    roundEndAudio.volume = 0.2;\n\n    const updateTimerBorder = (percentage) => {\n      let timer = document.getElementById(\"timer\");\n      let mask = document.getElementById(\"mask\");\n\n      if (timer && mask) {\n        if (percentage === 1) {\n          timer.style.WebkitTransition = \"all 0s linear\";\n        } else {\n          timer.style.WebkitTransition = \"all 1s linear\";\n        }\n\n        var timerPos = -(360 - Math.floor(360 * percentage));\n        if (Math.abs(timerPos) < 180) {\n          var maskPos = 180;\n          mask.style.backgroundColor = \"var(--color-pink)\";\n        } else {\n          var maskPos = 0;\n          mask.style.backgroundColor = \"var(--color-white)\";\n        }\n\n        timer.style.transform = \"rotate(\" + timerPos + \"deg)\";\n        mask.style.transform = \"rotate(\" + maskPos + \"deg)\";\n      }\n    };\n\n    socket.on(\"userConnected\", (userId, username) => {\n      userJoinAudio.play();\n    });\n\n    socket.on(\"userDisconnected\", (userId, username) => {\n      userLeaveAudio.play();\n    });\n\n    socket.on(\"actor\", ({ actor }) => {\n      setActor(actor);\n      setWord(\"\");\n      setGuessedWord(false);\n      setOverlayContents(\n        <OverlayMessage message={`${actor} is choosing a word`} />\n      );\n    });\n\n    socket.on(\"word\", ({ word }) => {\n      roundStartAudio.play();\n      setWord(word);\n      setGuessedWord(false);\n      setOverlayContents(null);\n    });\n\n    socket.on(\"wordChoices\", (wordChoices) => {\n      setWordChoices(wordChoices);\n      setOverlayContents(\n        <WordChoices words={wordChoices} onWordChoice={handleWordChoice} />\n      );\n    });\n\n    socket.on(\"timer\", ({ time }) => {\n      setTime(time);\n      if (time >= 0) {\n        updateTimerBorder(time / 60);\n      }\n      if (time <= 9 && time > -1) {\n        timerLowAudio.play();\n      } else if (time === -1) {\n        roundEndAudio.play();\n      }\n    });\n\n    socket.on(\"guessed\", (username) => {\n      guessedCorrectAudio.play();\n      if (username === gameContext.name) {\n        setGuessedWord(true);\n      }\n    });\n\n    socket.on(\"points\", (points) => {\n      setUserPoints(points);\n    });\n  }, []);\n\n  const remotePlayers = gameContext.players\n    .filter((p) => p.username !== actor)\n    .map((player) => (\n      <div key={player.userId} className=\"guesser\">\n        <div className=\"guesser-camera\">\n          <Player player={player} muted={player.call == null} />\n        </div>\n        <p className=\"guesser-name\">{player.username}</p>\n        <p className=\"guesser-pts\">\n          {userPoints !== null ? userPoints[player.username] : 0} pts\n        </p>\n      </div>\n    ));\n\n  const getWordHint = (word) => {\n    var result = \"\";\n    var i;\n    for (i = 0; i < word.length; i++) {\n      result += word[i] === \" \" ? \"\\xa0\\xa0\" : \"_\\xa0\";\n    }\n    return result.slice(0, -1);\n  };\n\n  useEffect(() => {\n    if (actor === gameContext.name) {\n      setActorPlayer(\n        gameContext.players.find(\n          (player) => player.username === gameContext.name\n        )\n      );\n    } else if (actor !== \"\") {\n      setActorPlayer(\n        gameContext.players.find((player) => player.username === actor)\n      );\n    }\n  }, [actor, gameContext.players]);\n\n  const handleWordChoice = (word) => {\n    socket.emit(\"wordChoice\", word);\n  };\n\n  const renderWord = () => {\n    let render;\n\n    if (gameContext.players.length >= 2) {\n      if (actor === gameContext.name || time === -1 || guessedWord) {\n        render = <h1>{word}</h1>;\n      } else {\n        render = <h1>{getWordHint(word)}</h1>;\n      }\n    } else {\n      if (word !== \"\") {\n        setWord(\"\");\n      }\n      render = <h1>waiting for players</h1>;\n    }\n\n    return render;\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"header\">\n        <a href=\"/\">\n          <img src={Logo} className=\"header-logo\" />\n        </a>\n        <div className=\"word\">{renderWord()}</div>\n        <div className=\"dummy\"></div>\n      </div>\n      <div className=\"game-components\">\n        <div className=\"camera-section\">\n          <div className=\"actor\">\n            {actorPlayer ? (\n              <div className=\"actor-camera\">\n                <Player\n                  player={actorPlayer}\n                  muted={true}\n                  isActor={true}\n                  overlayContents={overlayContents}\n                />\n              </div>\n            ) : (\n              \"\"\n            )}\n            <p className=\"guesser-name\">\n              {actorPlayer ? actorPlayer.username : \"\"}\n            </p>\n          </div>\n          <div className=\"guesser-camera-section\">{remotePlayers}</div>\n        </div>\n        <ChatBox room={gameContext.room} name={gameContext.name} />\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","import React, { useState, useCallback, useEffect, useContext } from \"react\";\r\nimport Peer from \"peerjs\";\r\nimport Home from \"./components/Home\";\r\nimport Lobby from \"./components/Lobby\";\r\nimport Game from \"./components/Game\";\r\nimport { GameContext } from \"./GameContext\";\r\n\r\nimport { socket } from \"./Socket\";\r\n\r\nconst PEER_OPTIONS = {\r\n  secure: true,\r\n  host: \"charades1.herokuapp.com\",\r\n  port: \"443\",\r\n  path: \"video\",\r\n};\r\n\r\nconst App = () => {\r\n  const gameContext = useContext(GameContext);\r\n\r\n  const addPlayer = (userId, username, stream, call) => {\r\n    gameContext.setPlayers((prevplayers) => [\r\n      ...prevplayers,\r\n      {\r\n        userId: userId,\r\n        username: username,\r\n        stream: stream,\r\n        call: call,\r\n        volume: 0.5,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const connectToNewUser = (userId, username, stream) => {\r\n    const call = gameContext.myPeer.call(userId, stream, {\r\n      metadata: { username: gameContext.name },\r\n    });\r\n    let count = 0;\r\n    call.on(\"stream\", (userVideoStream) => {\r\n      if (count++ % 2 === 0) {\r\n        addPlayer(userId, username, userVideoStream, call);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Setup peer on startup\r\n    if (socket.id) {\r\n      gameContext.setMyPeer(new Peer(socket.id, PEER_OPTIONS));\r\n    }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    if (gameContext.myPeer) {\r\n      gameContext.myPeer.on(\"error\", (err) => {\r\n        console.log(err.type, err);\r\n      });\r\n    }\r\n  }, [gameContext.myPeer]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"joinRoomResponse\", ({ response, room }) => {\r\n      const { status, message } = response;\r\n      if (status === 0) {\r\n        gameContext.setRoom(room);\r\n        gameContext.setState(\"lobby\");\r\n      } else {\r\n        alert(message);\r\n      }\r\n    });\r\n\r\n    socket.on(\"startGameResponse\", ({ response }) => {\r\n      const { status, message } = response;\r\n      if (status === 0) {\r\n        gameContext.setState(\"game\");\r\n      } else {\r\n        alert(message);\r\n      }\r\n    });\r\n\r\n    socket.on(\"userDisconnected\", ({ userId }) => {\r\n      // Close connection to user\r\n      var dcUser = gameContext.players.find(\r\n        (player) => player.userId === userId\r\n      );\r\n      if (dcUser) {\r\n        dcUser.call.close();\r\n      }\r\n\r\n      // Remove user from players\r\n      gameContext.setPlayers((prevPlayers) =>\r\n        prevPlayers.filter((p) => p.userId !== userId)\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setupConnections = async (stream) => {\r\n      // Setup socket to answer calls and share stream from other users\r\n      await gameContext.myPeer.on(\"call\", (call) => {\r\n        const userId = call.peer;\r\n        const username = call.metadata.username;\r\n\r\n        call.answer(stream);\r\n\r\n        // Wait to receive the users stream\r\n        let count = 0;\r\n        call.on(\"stream\", (userVideoStream) => {\r\n          if (count++ % 2 === 0) {\r\n            addPlayer(userId, username, userVideoStream, call);\r\n          }\r\n        });\r\n      });\r\n\r\n      // Setup listener that calls new user when they connect\r\n      socket.on(\"userConnected\", (userId, username) => {\r\n        connectToNewUser(userId, username, stream);\r\n      });\r\n    };\r\n\r\n    if (gameContext.state === \"lobby\") {\r\n      navigator.mediaDevices\r\n        .getUserMedia({\r\n          video: true,\r\n          audio: true,\r\n        })\r\n        .then((stream) => {\r\n          // Add client stream to players\r\n          addPlayer(socket.id, gameContext.name, stream, null);\r\n\r\n          // After all connections are made, let server know to let other users in room know.\r\n          setupConnections(stream).then(() => {\r\n            socket.emit(\"userConnected\", gameContext.room);\r\n          });\r\n        });\r\n    }\r\n  }, [gameContext.state]);\r\n\r\n  let render;\r\n  if (gameContext.state === \"home\") {\r\n    render = <Home />;\r\n  } else if (gameContext.state === \"lobby\") {\r\n    render = <Lobby />;\r\n  } else {\r\n    render = <Game />;\r\n  }\r\n\r\n  return render;\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport \"./MobileLanding.css\";\r\n\r\nimport ErrorIcon from \"./resources/images/error.svg\";\r\n\r\nconst MobileLanding = () => {\r\n  return (\r\n    <div className=\"mobile-landing-container\">\r\n      <img className=\"error-icon\" src={ErrorIcon} />\r\n      <p className=\"message\">Sorry, please join on a computer to play!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileLanding;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport MobileLanding from \"./MobileLanding\";\nimport \"./index.css\";\nimport { GameProvider } from \"./GameContext\";\nimport { BrowserView, MobileView } from \"react-device-detect\";\n\nReactDOM.render(\n  <GameProvider>\n    <BrowserView>\n      <App />\n    </BrowserView>\n    <MobileView>\n      <MobileLanding />\n    </MobileView>\n  </GameProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}